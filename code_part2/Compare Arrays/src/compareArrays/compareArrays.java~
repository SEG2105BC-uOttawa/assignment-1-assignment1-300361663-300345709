package compareArrays;

import java.math.*;
import java.lang.*;
import java.util.*;

public class compareArrays {
	
	public static long[] culculateTime(char type, int size) {
		Random random = new Random();
		long[] timeElapsed = new long[2];
		long sum, start, endOfConstruction, finish, timeForConstruction, timeForIteration;
		
		if(type == 'l') {
			int[] a = new int[size];
			start = System.currentTimeMillis();
			for(int j = 0; j < size; j++) {
				a[j] = random.nextInt(10);
			}
			endOfConstruction = System.currentTimeMillis();
			timeForConstruction = endOfConstruction - start;
			
			sum = 0;
			for(int j = 0; j < size; j++) {
				sum += a[j];
			}
			finish = System.currentTimeMillis();
			timeForIteration = finish - endOfConstruction;
		}
		
		else if(type == 'a'){
			ArrayList a = new ArrayList<>();
			start = System.currentTimeMillis();
			for(int j = 0; j < size; j++) {
				a.add(random.nextInt(10));
			}
			endOfConstruction = System.currentTimeMillis();
			timeForConstruction = endOfConstruction - start;
			
			sum = 0;
			Iterator<Integer> it = a.iterator();
			while(it.hasNext()) {
				sum += it.next().intValue();
			}
			finish = System.currentTimeMillis();
			timeForIteration = finish - endOfConstruction;
		}
		
		else if(type == 'v') {
			Vector a = new Vector<>();
			start = System.currentTimeMillis();
			for(int j = 0; j < size; j++) {
				a.add(random.nextInt(10));
			}
			endOfConstruction = System.currentTimeMillis();
			timeForConstruction = (endOfConstruction - start) ;
			
			sum = 0;
			Iterator<Integer> it = a.iterator();
			while(it.hasNext()) {
				sum += it.next().intValue();
			}
			finish = System.currentTimeMillis();
			timeForIteration = finish - endOfConstruction;
		}
		
		else throw new IllegalArgumentException("Please enter a valid type");
		
		timeElapsed[0] = timeForConstruction;
		timeElapsed[1] = timeForIteration;
		return timeElapsed;
	}
	
	public static void main(String[] args){
		Random random = new Random();
		//int size = 200000000;
		int size = 20000000;
		long[] temp = new long[2];
		ArrayList timeForConstruction = new ArrayList<Integer>();
		ArrayList timeForIteration = new ArrayList<Integer>();
		
		for(int i = 0; i < 10; i++) {
			temp = culculateTime('l', size);
			timeForConstruction.add(temp[0]);
			timeForIteration.add(temp[1]);
		}
		timeForConstruction.sort();
		timeForIteration.sort();

		
		long[] mean2 = new long[2];
		long[][] timeForArrayList = new long[10][2]; 
		for(int i = 0; i < 10; i++) {
			timeForArrayList[i] = culculateTime('a', size); 
			mean2[0] += timeForArrayList[i][0]/10;
			mean2[1] += timeForArrayList[i][1]/10;
		}
		System.out.println(mean2[0] + " " + mean2[1]);
		 
		
		long[] mean3 = new long[2];
		long[][] timeForVector = new long[10][2]; 
		for(int i = 0; i < 10; i++) {
			timeForVector[i] = culculateTime('v', size); 
			mean3[0] += timeForVector[i][0]/10;
			mean3[1] += timeForVector[i][1]/10;
		}
		System.out.println(mean3[0] + " " + mean3[1]);
	}
}
